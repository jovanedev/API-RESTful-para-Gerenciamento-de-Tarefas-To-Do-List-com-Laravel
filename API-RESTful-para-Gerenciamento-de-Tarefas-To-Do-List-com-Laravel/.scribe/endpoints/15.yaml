name: 'Gestão de Domínios'
description: |-

  Endpoints para gerenciamento de domínios associados a lojas.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/dominios/all
    metadata:
      groupName: 'Gestão de Domínios'
      groupDescription: |-

        Endpoints para gerenciamento de domínios associados a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Lista todos os domínios da loja autenticada.'
      description: 'Retorna uma lista de domínios associados à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "loja_id": 1,
                "dominio": "exemplo.com",
                "principal": true,
                "status_dominio": "ativo",
                "status_ssl": "configurado"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/dominios/view/{id}'
    metadata:
      groupName: 'Gestão de Domínios'
      groupDescription: |-

        Endpoints para gerenciamento de domínios associados a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Exibe um domínio específico.'
      description: 'Retorna os detalhes de um domínio com base no ID fornecido, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the view.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "loja_id": 1,
              "dominio": "exemplo.com",
              "principal": true,
              "status_dominio": "ativo",
              "status_ssl": "configurado"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/dominios/create
    metadata:
      groupName: 'Gestão de Domínios'
      groupDescription: |-

        Endpoints para gerenciamento de domínios associados a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Cria um novo domínio.'
      description: 'Cria um novo domínio associado à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      dominio:
        name: dominio
        description: 'O nome do domínio (deve ser único). Exemplo: exemplo.com'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      principal:
        name: principal
        description: 'nullable Indica se o domínio é o principal (padrão: false). Exemplo: true'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status_dominio:
        name: status_dominio
        description: 'Status do domínio (e.g., ativo, inativo). Exemplo: ativo'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status_ssl:
        name: status_ssl
        description: 'Status do SSL (e.g., configurado, pendente). Exemplo: configurado'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      dominio: consequatur
      principal: false
      status_dominio: consequatur
      status_ssl: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Domínio criado com sucesso!",
            "data": {
              "id": 1,
              "loja_id": 1,
              "dominio": "exemplo.com",
              "principal": true,
              "status_dominio": "ativo",
              "status_ssl": "configurado"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/dominios/update/{id}'
    metadata:
      groupName: 'Gestão de Domínios'
      groupDescription: |-

        Endpoints para gerenciamento de domínios associados a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza um domínio existente.'
      description: |-
        Atualiza os dados de um domínio específico, restrito à loja do usuário autenticado.

        evidences @authenticated
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      dominio:
        name: dominio
        description: 'O nome do domínio (deve ser único). Exemplo: novoexemplo.com'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      principal:
        name: principal
        description: 'Indica se o domínio é o principal. Exemplo: false'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status_dominio:
        name: status_dominio
        description: 'Status do domínio (e.g., ativo, inativo). Exemplo: inativo'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status_ssl:
        name: status_ssl
        description: 'Status do SSL (e.g., configurado, pendente). Exemplo: pendente'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      dominio: consequatur
      principal: false
      status_dominio: consequatur
      status_ssl: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Domínio atualizado com sucesso!",
            "data": {
              "id": 1,
              "loja_id": 1,
              "dominio": "novoexemplo.com",
              1 => 'principal',
              'status_dominio' => false,
              status_ssl": "pendente"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/dominios/delete/{id}'
    metadata:
      groupName: 'Gestão de Domínios'
      groupDescription: |-

        Endpoints para gerenciamento de domínios associados a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove um domínio.'
      description: 'Deleta um domínio específico, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Domínio removido com sucesso!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
