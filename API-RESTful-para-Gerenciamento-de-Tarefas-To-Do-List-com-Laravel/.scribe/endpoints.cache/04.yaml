## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestão de Marcas'
description: |-

  Endpoints para gerenciamento de marcas associadas a lojas.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/marcas/all
    metadata:
      groupName: 'Gestão de Marcas'
      groupDescription: |-

        Endpoints para gerenciamento de marcas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Lista todas as marcas da loja autenticada.'
      description: 'Retorna uma lista de marcas associadas à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "loja_id": 1,
                "nome": "Marca Exemplo",
                "descricao": "Descrição da marca"
              },
              {
                "id": 2,
                "loja_id": 1,
                "nome": "Outra Marca",
                "descricao": null
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/marcas/create
    metadata:
      groupName: 'Gestão de Marcas'
      groupDescription: |-

        Endpoints para gerenciamento de marcas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Cria uma nova marca.'
      description: 'Cria uma nova marca associada à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da marca (máx. 255 caracteres, único por loja). Exemplo: Marca Exemplo'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      descricao:
        name: descricao
        description: 'nullable Descrição da marca. Exemplo: Descrição da marca'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nome: consequatur
      descricao: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Marca criada com sucesso!",
            "data": {
              "id": 1,
              "loja_id": 1,
              "nome": "Marca Exemplo",
              "descricao": "Descrição da marca"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/marcas/view/{id}'
    metadata:
      groupName: 'Gestão de Marcas'
      groupDescription: |-

        Endpoints para gerenciamento de marcas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Exibe uma marca específica.'
      description: 'Retorna os detalhes de uma marca com base no ID fornecido, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the view.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "loja_id": 1,
              "nome": "Marca Exemplo",
              "descricao": "Descrição da marca"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/marcas/update/{id}'
    metadata:
      groupName: 'Gestão de Marcas'
      groupDescription: |-

        Endpoints para gerenciamento de marcas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza uma marca existente.'
      description: 'Atualiza os dados de uma marca específica, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da marca (máx. 255 caracteres, único por loja). Exemplo: Marca Atualizada'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      descricao:
        name: descricao
        description: 'nullable Descrição da marca. Exemplo: Nova descrição da marca'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nome: consequatur
      descricao: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Marca atualizada com sucesso!",
            "data": {
              "id": 1,
              "loja_id": 1,
              "nome": "Marca Atualizada",
              "descricao": "Nova descrição da marca"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/marcas/delete/{id}'
    metadata:
      groupName: 'Gestão de Marcas'
      groupDescription: |-

        Endpoints para gerenciamento de marcas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove uma marca.'
      description: 'Deleta uma marca específica, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Marca removida com sucesso!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
