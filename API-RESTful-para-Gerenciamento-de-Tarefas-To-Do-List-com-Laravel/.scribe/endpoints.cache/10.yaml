## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestão de Endereços'
description: |-

  Endpoints para gerenciamento de endereços de usuários.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/enderecos/all
    metadata:
      groupName: 'Gestão de Endereços'
      groupDescription: |-

        Endpoints para gerenciamento de endereços de usuários.
      subgroup: ''
      subgroupDescription: ''
      title: 'Lista todos os endereços do usuário autenticado.'
      description: 'Retorna uma lista de endereços associados ao usuário autenticado, incluindo informações do usuário relacionado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "usuario_id": 1,
                "estado": "São Paulo",
                "cidade": "São Paulo",
                "bairro": "Centro",
                "rua": "Avenida Paulista",
                "numero": "123",
                "complemento": "Apto 101",
                "usuario": {
                  "id": 1,
                  "name": "João Silva"
                }
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/enderecos/create
    metadata:
      groupName: 'Gestão de Endereços'
      groupDescription: |-

        Endpoints para gerenciamento de endereços de usuários.
      subgroup: ''
      subgroupDescription: ''
      title: 'Cria um novo endereço.'
      description: 'Cria um novo endereço associado a um usuário.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      usuario_id:
        name: usuario_id
        description: 'O ID do usuário (deve existir na tabela users). Exemplo: 1'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      estado:
        name: estado
        description: 'O estado do endereço (máx. 100 caracteres). Exemplo: São Paulo'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cidade:
        name: cidade
        description: 'A cidade do endereço (máx. 100 caracteres). Exemplo: São Paulo'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bairro:
        name: bairro
        description: 'O bairro do endereço (máx. 100 caracteres). Exemplo: Centro'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rua:
        name: rua
        description: 'A rua do endereço (máx. 100 caracteres). Exemplo: Avenida Paulista'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero:
        name: numero
        description: 'O número do endereço (máx. 20 caracteres). Exemplo: 123'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      complemento:
        name: complemento
        description: 'nullable O complemento do endereço (máx. 255 caracteres). Exemplo: Apto 101'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      usuario_id: 17
      estado: consequatur
      cidade: consequatur
      bairro: consequatur
      rua: consequatur
      numero: consequatur
      complemento: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Endereço criado com sucesso.",
            "data": {
              "id": 1,
              "usuario_id": 1,
              "estado": "São Paulo",
              "cidade": "São Paulo",
              "bairro": "Centro",
              "rua": "Avenida Paulista",
              "numero": "123",
              "complemento": "Apto 101"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/enderecos/view/{id}'
    metadata:
      groupName: 'Gestão de Endereços'
      groupDescription: |-

        Endpoints para gerenciamento de endereços de usuários.
      subgroup: ''
      subgroupDescription: ''
      title: 'Exibe um endereço específico.'
      description: 'Retorna os detalhes de um endereço com base no ID fornecido, restrito ao usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the view.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "usuario_id": 1,
              "estado": "São Paulo",
              "cidade": "São Paulo",
              "bairro": "Centro",
              "rua": "Avenida Paulista",
              "numero": "123",
              "complemento": "Apto 101",
              "usuario": {
                "id": 1,
                "name": "João Silva"
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/enderecos/update/{id}'
    metadata:
      groupName: 'Gestão de Endereços'
      groupDescription: |-

        Endpoints para gerenciamento de endereços de usuários.
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza um endereço existente.'
      description: 'Atualiza os dados de um endereço específico, restrito ao usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      estado:
        name: estado
        description: 'O estado do endereço (máx. 100 caracteres). Exemplo: Rio de Janeiro'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cidade:
        name: cidade
        description: 'A cidade do endereço (máx. 100 caracteres). Exemplo: Rio de Janeiro'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bairro:
        name: bairro
        description: 'O bairro do endereço (máx. 100 caracteres). Exemplo: Copacabana'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rua:
        name: rua
        description: 'A rua do endereço (máx. 100 caracteres). Exemplo: Avenida Atlântica'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero:
        name: numero
        description: 'O número do endereço (máx. 20 caracteres). Exemplo: 456'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      complemento:
        name: complemento
        description: 'nullable O complemento do endereço (máx. 255 caracteres). Exemplo: Casa 2'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      estado: consequatur
      cidade: consequatur
      bairro: consequatur
      rua: consequatur
      numero: consequatur
      complemento: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Endereço atualizado com sucesso.",
            "data": {
              "id": 1,
              "usuario_id": 1,
              "estado": "Rio de Janeiro",
              "cidade": "Rio de Janeiro",
              "bairro": "Copacabana",
              "rua": "Avenida Atlântica",
              "numero": "456",
              "complemento": "Casa 2"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/enderecos/delete/{id}'
    metadata:
      groupName: 'Gestão de Endereços'
      groupDescription: |-

        Endpoints para gerenciamento de endereços de usuários.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove um endereço.'
      description: 'Deleta um endereço específico, restrito ao usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Endereço deletado com sucesso."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
