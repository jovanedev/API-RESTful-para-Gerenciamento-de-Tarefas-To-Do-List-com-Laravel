## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestão de Moedas'
description: |-

  Endpoints para gerenciamento de moedas associadas a lojas.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/moedas/all
    metadata:
      groupName: 'Gestão de Moedas'
      groupDescription: |-

        Endpoints para gerenciamento de moedas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Lista todas as moedas da loja autenticada.'
      description: 'Retorna uma lista de moedas associadas à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "loja_id": 1,
                "nome": "Real Brasileiro",
                "codigo": "BRL",
                "simbolo": "R$",
                "taxa_cambio": 1.0,
                "padrao": true,
                "status": true
              },
              {
                "id": 2,
                "loja_id": 1,
                "nome": "Dólar Americano",
                "codigo": "USD",
                "simbolo": "$",
                "taxa_cambio": 5.5,
                "padrao": false,
                "status": true
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/moedas/view/{id}'
    metadata:
      groupName: 'Gestão de Moedas'
      groupDescription: |-

        Endpoints para gerenciamento de moedas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Exibe uma moeda específica.'
      description: 'Retorna os detalhes de uma moeda com base no ID fornecido, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the view.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "loja_id": 1,
              "nome": "Real Brasileiro",
              "codigo": "BRL",
              "simbolo": "R$",
              "taxa_cambio": 1.0,
              "padrao": true,
              "status": true
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/moedas/create
    metadata:
      groupName: 'Gestão de Moedas'
      groupDescription: |-

        Endpoints para gerenciamento de moedas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Cria uma nova moeda.'
      description: 'Cria uma nova moeda associada à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da moeda (máx. 255 caracteres, único por loja). Exemplo: Real Brasileiro'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      codigo:
        name: codigo
        description: 'Código da moeda (máx. 255 caracteres, único por loja). Exemplo: BRL'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      simbolo:
        name: simbolo
        description: 'Símbolo da moeda (máx. 10 caracteres). Exemplo: R$'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      taxa_cambio:
        name: taxa_cambio
        description: 'Taxa de câmbio em relação à moeda padrão (mín. 0). Exemplo: 1.0'
        required: true
        example: consequatur
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      padrao:
        name: padrao
        description: 'nullable Indica se é a moeda padrão da loja. Exemplo: true'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'nullable Indica se a moeda está ativa. Exemplo: true'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nome: consequatur
      codigo: consequatur
      simbolo: consequatur
      taxa_cambio: consequatur
      padrao: false
      status: false
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Moeda criada com sucesso!",
            "data": {
              "id": 1,
              "loja_id": 1,
              "nome": "Real Brasileiro",
              "codigo": "BRL",
              "simbolo": "R$",
              "taxa_cambio": 1.0,
              "padrao": true,
              "status": true
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/moedas/update/{id}'
    metadata:
      groupName: 'Gestão de Moedas'
      groupDescription: |-

        Endpoints para gerenciamento de moedas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualiza uma moeda existente.'
      description: 'Atualiza os dados de uma moeda específica, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nome:
        name: nome
        description: 'Nome da moeda (máx. 255 caracteres, único por loja). Exemplo: Dólar Americano'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      codigo:
        name: codigo
        description: 'Código da moeda (máx. 255 caracteres, único por loja). Exemplo: USD'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      simbolo:
        name: simbolo
        description: 'Símbolo da moeda (máx. 10 caracteres). Exemplo: $'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      taxa_cambio:
        name: taxa_cambio
        description: 'Taxa de câmbio em relação à moeda padrão (mín. 0). Exemplo: 5.5'
        required: true
        example: consequatur
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      padrao:
        name: padrao
        description: 'nullable Indica se é a moeda padrão da loja. Exemplo: false'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: 'nullable Indica se a moeda está ativa. Exemplo: true'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      nome: consequatur
      codigo: consequatur
      simbolo: consequatur
      taxa_cambio: consequatur
      padrao: false
      status: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Moeda atualizada com sucesso!",
            "data": {
              "id": 1,
              "loja_id": 1,
              "nome": "Dólar Americano",
              "codigo": "USD",
              "simbolo": "$",
              "taxa_cambio": 5.5,
              "padrao": false,
              "status": true
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/moedas/delete/{id}'
    metadata:
      groupName: 'Gestão de Moedas'
      groupDescription: |-

        Endpoints para gerenciamento de moedas associadas a lojas.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove uma moeda.'
      description: 'Deleta uma moeda específica, restrito à loja do usuário autenticado.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Moeda removida com sucesso!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
